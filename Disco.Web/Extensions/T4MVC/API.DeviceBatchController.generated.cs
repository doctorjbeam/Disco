// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Threading.Tasks;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace Disco.Web.Areas.API.Controllers
{
    public partial class DeviceBatchController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DeviceBatchController() { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected DeviceBatchController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(Task<ActionResult> taskResult)
        {
            return RedirectToAction(taskResult.Result);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(Task<ActionResult> taskResult)
        {
            return RedirectToActionPermanent(taskResult.Result);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Update()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateName()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateName);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdatePurchaseDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePurchaseDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateSupplier()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateSupplier);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdatePurchaseDetails()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePurchaseDetails);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateUnitCost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateUnitCost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateUnitQuantity()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateUnitQuantity);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDefaultDeviceModelId()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDefaultDeviceModelId);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateWarrantyValidUntil()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWarrantyValidUntil);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateWarrantyDetails()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWarrantyDetails);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuredDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuredDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceSupplier()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceSupplier);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuredUntil()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuredUntil);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateInsuranceDetails()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceDetails);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateComments()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateComments);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateDevicesLinkedGroup()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDevicesLinkedGroup);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UpdateAssignedUsersLinkedGroup()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateAssignedUsersLinkedGroup);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Delete()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Index()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public DeviceBatchController Actions { get { return MVC.API.DeviceBatch; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "API";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "DeviceBatch";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "DeviceBatch";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string Update = "Update";
            public readonly string UpdateName = "UpdateName";
            public readonly string UpdatePurchaseDate = "UpdatePurchaseDate";
            public readonly string UpdateSupplier = "UpdateSupplier";
            public readonly string UpdatePurchaseDetails = "UpdatePurchaseDetails";
            public readonly string UpdateUnitCost = "UpdateUnitCost";
            public readonly string UpdateUnitQuantity = "UpdateUnitQuantity";
            public readonly string UpdateDefaultDeviceModelId = "UpdateDefaultDeviceModelId";
            public readonly string UpdateWarrantyValidUntil = "UpdateWarrantyValidUntil";
            public readonly string UpdateWarrantyDetails = "UpdateWarrantyDetails";
            public readonly string UpdateInsuredDate = "UpdateInsuredDate";
            public readonly string UpdateInsuranceSupplier = "UpdateInsuranceSupplier";
            public readonly string UpdateInsuredUntil = "UpdateInsuredUntil";
            public readonly string UpdateInsuranceDetails = "UpdateInsuranceDetails";
            public readonly string UpdateComments = "UpdateComments";
            public readonly string UpdateDevicesLinkedGroup = "UpdateDevicesLinkedGroup";
            public readonly string UpdateAssignedUsersLinkedGroup = "UpdateAssignedUsersLinkedGroup";
            public readonly string Delete = "Delete";
            public readonly string Index = "Index";
            public readonly string Timeline = "Timeline";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string Update = "Update";
            public const string UpdateName = "UpdateName";
            public const string UpdatePurchaseDate = "UpdatePurchaseDate";
            public const string UpdateSupplier = "UpdateSupplier";
            public const string UpdatePurchaseDetails = "UpdatePurchaseDetails";
            public const string UpdateUnitCost = "UpdateUnitCost";
            public const string UpdateUnitQuantity = "UpdateUnitQuantity";
            public const string UpdateDefaultDeviceModelId = "UpdateDefaultDeviceModelId";
            public const string UpdateWarrantyValidUntil = "UpdateWarrantyValidUntil";
            public const string UpdateWarrantyDetails = "UpdateWarrantyDetails";
            public const string UpdateInsuredDate = "UpdateInsuredDate";
            public const string UpdateInsuranceSupplier = "UpdateInsuranceSupplier";
            public const string UpdateInsuredUntil = "UpdateInsuredUntil";
            public const string UpdateInsuranceDetails = "UpdateInsuranceDetails";
            public const string UpdateComments = "UpdateComments";
            public const string UpdateDevicesLinkedGroup = "UpdateDevicesLinkedGroup";
            public const string UpdateAssignedUsersLinkedGroup = "UpdateAssignedUsersLinkedGroup";
            public const string Delete = "Delete";
            public const string Index = "Index";
            public const string Timeline = "Timeline";
        }


        static readonly ActionParamsClass_Update s_params_Update = new ActionParamsClass_Update();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Update UpdateParams { get { return s_params_Update; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Update
        {
            public readonly string id = "id";
            public readonly string key = "key";
            public readonly string value = "value";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateName s_params_UpdateName = new ActionParamsClass_UpdateName();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateName UpdateNameParams { get { return s_params_UpdateName; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateName
        {
            public readonly string id = "id";
            public readonly string BatchName = "BatchName";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdatePurchaseDate s_params_UpdatePurchaseDate = new ActionParamsClass_UpdatePurchaseDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdatePurchaseDate UpdatePurchaseDateParams { get { return s_params_UpdatePurchaseDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdatePurchaseDate
        {
            public readonly string id = "id";
            public readonly string PurchaseDate = "PurchaseDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateSupplier s_params_UpdateSupplier = new ActionParamsClass_UpdateSupplier();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateSupplier UpdateSupplierParams { get { return s_params_UpdateSupplier; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateSupplier
        {
            public readonly string id = "id";
            public readonly string Supplier = "Supplier";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdatePurchaseDetails s_params_UpdatePurchaseDetails = new ActionParamsClass_UpdatePurchaseDetails();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdatePurchaseDetails UpdatePurchaseDetailsParams { get { return s_params_UpdatePurchaseDetails; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdatePurchaseDetails
        {
            public readonly string id = "id";
            public readonly string PurchaseDetails = "PurchaseDetails";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateUnitCost s_params_UpdateUnitCost = new ActionParamsClass_UpdateUnitCost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateUnitCost UpdateUnitCostParams { get { return s_params_UpdateUnitCost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateUnitCost
        {
            public readonly string id = "id";
            public readonly string UnitCost = "UnitCost";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateUnitQuantity s_params_UpdateUnitQuantity = new ActionParamsClass_UpdateUnitQuantity();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateUnitQuantity UpdateUnitQuantityParams { get { return s_params_UpdateUnitQuantity; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateUnitQuantity
        {
            public readonly string id = "id";
            public readonly string UnitQuantity = "UnitQuantity";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateDefaultDeviceModelId s_params_UpdateDefaultDeviceModelId = new ActionParamsClass_UpdateDefaultDeviceModelId();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDefaultDeviceModelId UpdateDefaultDeviceModelIdParams { get { return s_params_UpdateDefaultDeviceModelId; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDefaultDeviceModelId
        {
            public readonly string id = "id";
            public readonly string DefaultDeviceModelId = "DefaultDeviceModelId";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateWarrantyValidUntil s_params_UpdateWarrantyValidUntil = new ActionParamsClass_UpdateWarrantyValidUntil();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateWarrantyValidUntil UpdateWarrantyValidUntilParams { get { return s_params_UpdateWarrantyValidUntil; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateWarrantyValidUntil
        {
            public readonly string id = "id";
            public readonly string WarrantyValidUntil = "WarrantyValidUntil";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateWarrantyDetails s_params_UpdateWarrantyDetails = new ActionParamsClass_UpdateWarrantyDetails();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateWarrantyDetails UpdateWarrantyDetailsParams { get { return s_params_UpdateWarrantyDetails; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateWarrantyDetails
        {
            public readonly string id = "id";
            public readonly string WarrantyDetails = "WarrantyDetails";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuredDate s_params_UpdateInsuredDate = new ActionParamsClass_UpdateInsuredDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuredDate UpdateInsuredDateParams { get { return s_params_UpdateInsuredDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuredDate
        {
            public readonly string id = "id";
            public readonly string InsuredDate = "InsuredDate";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceSupplier s_params_UpdateInsuranceSupplier = new ActionParamsClass_UpdateInsuranceSupplier();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceSupplier UpdateInsuranceSupplierParams { get { return s_params_UpdateInsuranceSupplier; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceSupplier
        {
            public readonly string id = "id";
            public readonly string InsuranceSupplier = "InsuranceSupplier";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuredUntil s_params_UpdateInsuredUntil = new ActionParamsClass_UpdateInsuredUntil();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuredUntil UpdateInsuredUntilParams { get { return s_params_UpdateInsuredUntil; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuredUntil
        {
            public readonly string id = "id";
            public readonly string InsuredUntil = "InsuredUntil";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateInsuranceDetails s_params_UpdateInsuranceDetails = new ActionParamsClass_UpdateInsuranceDetails();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateInsuranceDetails UpdateInsuranceDetailsParams { get { return s_params_UpdateInsuranceDetails; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateInsuranceDetails
        {
            public readonly string id = "id";
            public readonly string InsuranceDetails = "InsuranceDetails";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateComments s_params_UpdateComments = new ActionParamsClass_UpdateComments();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateComments UpdateCommentsParams { get { return s_params_UpdateComments; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateComments
        {
            public readonly string id = "id";
            public readonly string Comments = "Comments";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateDevicesLinkedGroup s_params_UpdateDevicesLinkedGroup = new ActionParamsClass_UpdateDevicesLinkedGroup();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateDevicesLinkedGroup UpdateDevicesLinkedGroupParams { get { return s_params_UpdateDevicesLinkedGroup; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateDevicesLinkedGroup
        {
            public readonly string id = "id";
            public readonly string GroupId = "GroupId";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_UpdateAssignedUsersLinkedGroup s_params_UpdateAssignedUsersLinkedGroup = new ActionParamsClass_UpdateAssignedUsersLinkedGroup();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UpdateAssignedUsersLinkedGroup UpdateAssignedUsersLinkedGroupParams { get { return s_params_UpdateAssignedUsersLinkedGroup; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UpdateAssignedUsersLinkedGroup
        {
            public readonly string id = "id";
            public readonly string GroupId = "GroupId";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_Delete s_params_Delete = new ActionParamsClass_Delete();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Delete DeleteParams { get { return s_params_Delete; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Delete
        {
            public readonly string id = "id";
            public readonly string redirect = "redirect";
        }
        static readonly ActionParamsClass_Index s_params_Index = new ActionParamsClass_Index();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Index IndexParams { get { return s_params_Index; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Index
        {
            public readonly string id = "id";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
            }
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_DeviceBatchController : Disco.Web.Areas.API.Controllers.DeviceBatchController
    {
        public T4MVC_DeviceBatchController() : base(Dummy.Instance) { }

        [NonAction]
        partial void UpdateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string key, string value, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult Update(int id, string key, string value, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Update);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "key", key);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "value", value);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateOverride(callInfo, id, key, value, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateNameOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string BatchName, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateName(int id, string BatchName, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "BatchName", BatchName);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateNameOverride(callInfo, id, BatchName, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdatePurchaseDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string PurchaseDate, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdatePurchaseDate(int id, string PurchaseDate, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePurchaseDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PurchaseDate", PurchaseDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdatePurchaseDateOverride(callInfo, id, PurchaseDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateSupplierOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string Supplier, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateSupplier(int id, string Supplier, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateSupplier);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Supplier", Supplier);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateSupplierOverride(callInfo, id, Supplier, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdatePurchaseDetailsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string PurchaseDetails, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdatePurchaseDetails(int id, string PurchaseDetails, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdatePurchaseDetails);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "PurchaseDetails", PurchaseDetails);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdatePurchaseDetailsOverride(callInfo, id, PurchaseDetails, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateUnitCostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string UnitCost, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateUnitCost(int id, string UnitCost, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateUnitCost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "UnitCost", UnitCost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateUnitCostOverride(callInfo, id, UnitCost, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateUnitQuantityOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string UnitQuantity, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateUnitQuantity(int id, string UnitQuantity, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateUnitQuantity);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "UnitQuantity", UnitQuantity);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateUnitQuantityOverride(callInfo, id, UnitQuantity, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateDefaultDeviceModelIdOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string DefaultDeviceModelId, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateDefaultDeviceModelId(int id, string DefaultDeviceModelId, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDefaultDeviceModelId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "DefaultDeviceModelId", DefaultDeviceModelId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateDefaultDeviceModelIdOverride(callInfo, id, DefaultDeviceModelId, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateWarrantyValidUntilOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string WarrantyValidUntil, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateWarrantyValidUntil(int id, string WarrantyValidUntil, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWarrantyValidUntil);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "WarrantyValidUntil", WarrantyValidUntil);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateWarrantyValidUntilOverride(callInfo, id, WarrantyValidUntil, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateWarrantyDetailsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string WarrantyDetails, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateWarrantyDetails(int id, string WarrantyDetails, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateWarrantyDetails);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "WarrantyDetails", WarrantyDetails);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateWarrantyDetailsOverride(callInfo, id, WarrantyDetails, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuredDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string InsuredDate, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuredDate(int id, string InsuredDate, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuredDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "InsuredDate", InsuredDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuredDateOverride(callInfo, id, InsuredDate, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceSupplierOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string InsuranceSupplier, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceSupplier(int id, string InsuranceSupplier, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceSupplier);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "InsuranceSupplier", InsuranceSupplier);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceSupplierOverride(callInfo, id, InsuranceSupplier, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuredUntilOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string InsuredUntil, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuredUntil(int id, string InsuredUntil, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuredUntil);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "InsuredUntil", InsuredUntil);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuredUntilOverride(callInfo, id, InsuredUntil, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateInsuranceDetailsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string InsuranceDetails, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateInsuranceDetails(int id, string InsuranceDetails, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateInsuranceDetails);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "InsuranceDetails", InsuranceDetails);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateInsuranceDetailsOverride(callInfo, id, InsuranceDetails, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateCommentsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string Comments, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateComments(int id, string Comments, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateComments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "Comments", Comments);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateCommentsOverride(callInfo, id, Comments, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateDevicesLinkedGroupOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string GroupId, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateDevicesLinkedGroup(int id, string GroupId, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateDevicesLinkedGroup);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "GroupId", GroupId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateDevicesLinkedGroupOverride(callInfo, id, GroupId, redirect);
            return callInfo;
        }

        [NonAction]
        partial void UpdateAssignedUsersLinkedGroupOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, string GroupId, bool redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult UpdateAssignedUsersLinkedGroup(int id, string GroupId, bool redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UpdateAssignedUsersLinkedGroup);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "GroupId", GroupId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            UpdateAssignedUsersLinkedGroupOverride(callInfo, id, GroupId, redirect);
            return callInfo;
        }

        [NonAction]
        partial void DeleteOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int id, bool? redirect);

        [NonAction]
        public override System.Web.Mvc.ActionResult Delete(int id, bool? redirect)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Delete);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "redirect", redirect);
            DeleteOverride(callInfo, id, redirect);
            return callInfo;
        }

        [NonAction]
        partial void IndexOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? id);

        [NonAction]
        public override System.Web.Mvc.ActionResult Index(int? id)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Index);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "id", id);
            IndexOverride(callInfo, id);
            return callInfo;
        }

        [NonAction]
        partial void TimelineOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        [NonAction]
        public override System.Web.Mvc.ActionResult Timeline()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Timeline);
            TimelineOverride(callInfo);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
